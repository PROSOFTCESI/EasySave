@startuml
' Optionnel : un style un peu plus lisible
skinparam classAttributeIconSize 0
skinparam classFontSize 12
skinparam classAttributeFontSize 11
skinparam classBackgroundColor #FEFEFE

' ————————————————————————————————————
' Définition de la classe "ConsoleManager"
' ————————————————————————————————————
class ConsoleManager {
    -isRunning: bool
    -jsonReader: JsonReader
    +Launch(): void
    -ShowMainMenu(): void
    -CreateSaveJobMenu(): void
    -UpdateSaveJobMenu(): void
    -ReadSaveJobsMenu(): void
    -DeleteSaveJobMenu(): void
    -LanguageSelectionMenu(): void
    -ShowAvailableSaveJobs(): void
    -GetUserInput(inputInfoMessage: string?): string
    -GetJobsToUpdate(userInput: string?): List<int>?
    -ClearConsole(): void
    -PressKeyToContinue(infoMessage: string?): void
    -WriteColored(color: ConsoleColor, args: object[]): void
    +Write(args: object[]): void
    +WriteRed(args: object[]): void
    +WriteGreen(args: object[]): void
    +WriteYellow(args: object[]): void
    +WriteCyan(args: object[]): void
    +WriteMagenta(args: object[]): void
    +WriteGrey(args: object[]): void
}

' ————————————————————————————————————
' Définition de la classe "SaveJob" (abstraite)
' ————————————————————————————————————
abstract class SaveJob {
    +name: string
    +sourcePath: string
    +targetPath: string
    +creationDate: DateTime
    +lastUpdate: DateTime
    +state: string
    
    #SaveJob(name: string, sourcePath: string, targetPath: string)
    -SetTargetPath(targetPath: string): void
    +CreateSave(): bool
    #FullSave(sourcePath: string, targetPath: string): bool
    +Save(): bool {abstract}
    +RestoreSave(): bool {abstract}
    +DeleteSave(): bool
    +ToString(): string
}

' ————————————————————————————————————
' "FullSave" hérite de "SaveJob"
' ————————————————————————————————————
class FullSave extends SaveJob {
    +FullSave(name: string, sourcePath: string, targetPath: string)
    +Save(): bool
    +RestoreSave(): bool
    +ToString(): string
}

' ————————————————————————————————————
' "DifferentialSave" hérite de "SaveJob"
' ————————————————————————————————————
class DifferentialSave extends SaveJob {
    +DifferentialSave(name: string, sourcePath: string, targetPath: string)
    +Save(): bool
    +RestoreSave(): bool
    +ToString(): string
}

' ————————————————————————————————————
' Définition de la classe "Logger"
' avec stéréotype <<DLL>>
' ————————————————————————————————————
class Logger <<DLL>> {
    -LogDirectory: string
    -Instance: Logger?
    --
    +GetInstance(): Logger
    -Logger()
    -WriteFile(text: string): bool
    +Initialize(projectName: string, projectsPath: string?): void
    +Log(toWrite: object): bool
    -GetLogPath(): string
    -GetLogDirectory(projectName: string, projectsPath: string?)
}

' ————————————————————————————————————
' Définition de la classe "StateJsonReader"
' (anciennement JobsManager)
' ————————————————————————————————————
class StateJsonReader {
    -FilePath: string
    -instance: StateJsonReader?
    
    +GetInstance(): StateJsonReader
    -ReadJson(): List<JobStateJsonDefinition>
    +GetJobs(): List<SaveJob>
    +UpdateJob(jobName: string, infos: JobStateJsonDefinition): bool
    +AddJob(job: SaveJob): bool
    +DeleteJob(job: SaveJob): bool
    -SaveJob(job: JobStateJsonDefinition): bool
    -GetJob(jobName: string): JobStateJsonDefinition
    -UpdateJob(job: JobStateJsonDefinition): bool
}

' ————————————————————————————————————
' Définition de la classe "JobStateJsonDefinition"
' (anciennement JobsJson)
' ————————————————————————————————————
class JobStateJsonDefinition {
    +name: string
    +type: string
    +lastUpdate: DateTime
    +sourcePath: string
    +targetPath: string
    +state: string
    +totalFilesToCopy: int?
    +totalFilesSize: int?
    +progression: int?
    +nbFilesLeftToDo: int?
    +totalSizeLeftToDo: int?
    +sourceFilePath: string?
    +targetFilePath: string?
}

' ————————————————————————————————————
' Définition de la classe "JsonReader"
' ————————————————————————————————————
class JsonReader {
    -basePath: string
    -messages: Dictionary<string, string>?
    +JsonReader(basePath: string, fileName: string)
    -LoadMessages(fileName: string): void
    +GetMessage(key: string): string?
}

' ————————————————————————————————————
' Dépendances entre les classes
' ————————————————————————————————————
ConsoleManager ..> JsonReader : uses
ConsoleManager ..> SaveJob : uses
StateJsonReader ..> JobStateJsonDefinition : depends on
StateJsonReader ..> SaveJob : manages
@enduml